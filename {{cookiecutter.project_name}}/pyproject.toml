[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "pythonテンプレート"
authors = ["{{cookiecutter.author}}"]

[tool.poetry.dependencies]
python = "^3.11.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pylint = "^2.15.5"
pytest-cov = "^4.0.0"
toml = "^0.10.2"
black = "^22.10.0"
isort = "^5.10.1"
pdoc3 = "^0.10.0"
mypy = "^0.991"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.black]
line-length = 79
include = '\.py$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

# pytest.iniの設定
[tool.pytest.ini_options]
addopts = "-ra -p no:cacheprovider --strict-config --strict-markers"

# .coveragercの設定
[tool.coverage.run]
branch = true
source = ["{{cookiecutter.project_name}}/"]
omit = ["{{cookiecutter.project_name}}/example.py"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self\\.debug",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "@(abc\\.)?abstractmethod",
]
ignore_errors = true


[tool.coverage.html]
directory = "htmlcov"

[tool.mypy]
packages = ["{{cookiecutter.project_name}}"]
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true
